{"version":3,"sources":["logo.svg","controls.js","addPlayer.js","waitingList.js","smoothNoise.js","battlefield.js","errorBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Controls","handleKeyboardEvents","event","key","props","turnLeft","turnRight","morePower","lessPower","fire","componentDidMount","document","addEventListener","this","player","className","for","name","health","type","value","angle","onClick","power","id","React","Component","AddPlayer","state","update","e","setState","target","add","a","trim","controller","flashError","list","includes","addPlayer","onChange","WaitingList","map","Random","seed","_seed","prototype","next","nextFloat","opt_minOrMax","opt_max","smoothNoise","frequency","subDivision","highLimit","lowLimit","lastPos","x","y","points","width","window","innerWidth","randomNumber","min","max","Math","floor","random","Cosine_Interpolate","b","ft","f","cos","fill","length","i","subPoints","j","push","nextX","nextY","t","sub_x","sub_y","RAD","PI","Battlefield","createHeightMap","noise","innerHeight","cnv","offsetWidth","paintStage","getStartingPosition","cannonball","height","offsetHeight","c","ctx","fillStyle","fillRect","beginPath","moveTo","last","forEach","point","lineTo","closePath","arc","angleCorrected","linex","liney","sin","stroke","rx","round","ry","px","cachedCtx","getImageData","data","getElementById","getContext","cachedMap","OffscreenCanvas","drawImage","ErrorBox","message","Array","GRAV","TAU","App","currentPlayer","controlsBlocked","showSettings","newPlayer","Object","assign","forceUpdate","time","startX","startY","Promise","resolve","timer","setInterval","pow","requestAnimationFrame","distanceX","abs","distanceY","distance","sqrt","clearTimeout","nextPlayer","nextIdx","indexOf","msg","errorMessage","setTimeout","startGame","componentDidUpdate","current","others","filter","playerNames","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4899932b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f5d6e48b.svg\";","import React from 'react';\n\nclass Controls extends React.Component {\n\n  handleKeyboardEvents = (event) => {\n    switch (event.key) {\n      case 'ArrowLeft':  this.props.turnLeft();  break;\n      case 'ArrowRight': this.props.turnRight(); break;\n      case 'ArrowUp':    this.props.morePower(); break;\n      case 'ArrowDown':  this.props.lessPower(); break;\n      case ' ':          this.props.fire();      break;\n      default:\n\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.handleKeyboardEvents );\n  }\n\n  render(){\n    if ( ! this.props.player ) return null;\n    return (\n      <div className=\"Controls\">\n        <label for=\"Name\">Name</label><span className=\"Name\">{this.props.player.name}</span>\n        <label for=\"Health\">Health</label><span className=\"Health\">{this.props.player.health}</span>\n        <label for=\"Angle\">Angle</label>\n          <span className=\"Angle\">\n            <input type=\"number\" className=\"Angle\" value={this.props.player.angle}/>\n            <button onClick={this.props.turnLeft}>&lt;</button>\n            <button onClick={this.props.turnRight}>&gt;</button>\n          </span>\n        <label for=\"Power\">Power</label>\n        <span className=\"Power\">\n        <input type=\"number\" className=\"Angle\" value={this.props.player.power}/>\n          <button onClick={this.props.lessPower}>-</button>\n          <button onClick={this.props.morePower}>+</button>\n        </span>\n        <button id=\"fire\" onClick={this.props.fire}>Fire</button>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React from 'react';\n\nclass AddPlayer extends React.Component {\n  state = {name:\"\"};\n\n  update = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  add = async ()=>{\n    if ( this.state.name.trim() === \"\" ){\n      await this.props.controller.flashError(\"Please enter a user name\");\n      return;\n    }\n    if ( this.props.list.includes(this.state.name) ){\n      await this.props.controller.flashError(\"Name is taken, choose another one\");\n      return;\n    }\n    this.props.addPlayer(this.state.name)\n    this.setState({name:\"\"});\n  }\n\n  render(){\n    return (\n      <div className=\"AddPlayer\">\n        <input className=\"center-relative-h\" id=\"name\" onChange={this.update} value={this.state.name} />\n        <button className=\"center-relative-h\" onClick={this.add}>Add Player</button>\n      </div> );\n  }\n}\n\nexport default AddPlayer;\n","import React from 'react';\n\nclass WaitingList extends React.Component {\n  state = {name: \"\"}\n\n  update = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  add = ()=>{\n    this.props.addPlayer(this.state.name)\n  }\n\n  render(){ return this.props.list.map( (player)=> {\n    return (\n    <div className=\"WaitingPlayer\">\n      {player.name} <span className=\"Health\">{player.health}</span>\n    </div> );\n  } ); }\n}\n\nexport default WaitingList;\n","// SmoothNoise script\n// ver: 0.1\n// markusT inkfood.com\n// https://github.com/inkfood/smoothNoiseJS/blob/master/lib/smoothNoise.js\n\nfunction Random(seed) {\n  this._seed = seed % 2147483647;\n  if (this._seed <= 0) this._seed += 2147483646;\n}\n\nRandom.prototype.next = function () {\n  return this._seed = this._seed * 16807 % 2147483647;\n};\n\nRandom.prototype.nextFloat = function (opt_minOrMax, opt_max) {\n  return (this.next() - 1) / 2147483646;\n};\n\nvar smoothNoise = function ()\n{\n    this.frequency = 10;\n    this.subDivision = 10;\n    this.highLimit = 300;\n    this.lowLimit = 500;\n    this.lastPos = {x:0,y:0};\n    this.points = [];\n    this.width = window.innerWidth;\n}\n\nsmoothNoise.prototype.fill = function()\n{\n    var points = [];\n\n    this.lastPos = {x:this.lastPos.x,y:randomNumber(this.lowLimit,this.highLimit)};\n\n    //PRE DEFINED POINTS\n    if(this.points.length > 0)\n    {\n        this.lastPos = {x:0,y:this.points[0][1]}\n        for (let i = 0; i < this.frequency; i++)\n        {\n            let subPoints = this.add(null,this.points[i][1]);\n\n            for (let j = 0; j < subPoints.length; j++)\n            {\n                    points.push(subPoints[j])\n            }\n        }\n    }\n    //DYNAMIC POINTS\n    else\n    {\n\n        for (var i = 0; i < this.frequency; i++)\n        {\n            var subPoints = this.add();\n\n            for (var j = 0; j < subPoints.length; j++)\n            {\n                points.push(subPoints[j])\n            }\n        }\n\n    }\n\n    return points;\n}\n\nsmoothNoise.prototype.add = function(nextX,nextY)\n{   let x,y;\n    if(nextX){x = nextX}//PRE DEFINED POINTS\n    else {x = (this.lastPos.x + (this.width/(this.frequency)));}//DYNAMIC POINTS\n\n    if(nextY){y = nextY}//PRE DEFINED POINTS\n    else {y = randomNumber(this.lowLimit,this.highLimit);}//DYNAMIC POINTS\n\n\n    let subPoints = [];\n\n    for (var i = 0; i < this.subDivision; i++)\n    {\n        var t = i/this.subDivision;\n\n        var sub_x = (((x-this.lastPos.x)/this.subDivision)*(i))+this.lastPos.x;\n\n        var sub_y = Cosine_Interpolate(this.lastPos.y, y, t);\n\n        subPoints.push({x:sub_x,y:sub_y})\n    }\n\n    this.lastPos = {x:x,y:y};\n\n    return subPoints;\n}\n\nfunction randomNumber(min,max)\n{\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction Cosine_Interpolate(a, b, x)\n{\n\tvar ft = x * 3.1415927 //MATH PI\n\tvar f = (1 - Math.cos(ft)) * .5\n\n\treturn  a*(1-f) + b*f\n}\n\nexport default smoothNoise;\n","import React from 'react';\nimport smoothNoise from './smoothNoise.js'\n\nconst RAD = Math.PI / 180;\n\nclass Battlefield extends React.Component {\n\n  componentDidMount(){\n    this.cnv = document.getElementById('stage');\n    this.cnv.width = window.innerWidth;\n    this.cnv.height = window.innerHeight;\n    this.ctx = this.cnv.getContext('2d');\n    this.createHeightMap();\n    this.paintStage();\n    this.cachedMap = new OffscreenCanvas( this.cnv.width, this.cnv.height );\n    this.cachedCtx = this.cachedMap.getContext('2d');\n    this.cachedCtx.drawImage(this.cnv,0,0);\n  }\n\n  createHeightMap = ()=> {\n    this.noise = new smoothNoise();\n    this.noise.frequency = 10;\n    this.noise.subDivision = 10;\n    this.noise.highLimit = window.innerHeight / 3;\n    this.noise.lowLimit = 20;\n    this.noise.lastPos = {x:0,y:0};\n    this.noise.width = this.cnv.offsetWidth;\n    this.map = this.noise.fill();\n    this.props.controller.paintStage = this.paintStage;\n    this.props.controller.getStartingPosition = () => {\n      return this.map.random()\n    }\n  }\n\n  paintStage = (cannonball=false) => {\n    let width  = this.cnv.offsetWidth;\n    let height = this.cnv.offsetHeight;\n    let c = this.ctx;\n    c.fillStyle = '#00f';\n    c.fillRect(0,0,width,height);\n    c.fillStyle = '#0f0';\n    c.beginPath();\n    c.moveTo(0, height);\n    let last = null;\n    this.map.forEach( (point) => {\n      last = point;\n      c.lineTo( point.x, height - point.y );\n    })\n    c.lineTo( width, height - last.y );\n    c.lineTo(width,height);\n    c.lineTo(0,height);\n    c.closePath();\n    c.fill();\n    c.fillStyle = '#f00';\n    this.props.controller.state.player.forEach( (player) => {\n      c.beginPath();\n      c.arc( player.x, height - player.y, 10, 0, 2 * Math.PI );\n      c.fill();\n      c.beginPath();\n      c.moveTo( player.x, height - player.y );\n      let angleCorrected = ( 360 + 360 - player.angle ) % 360;\n      let linex = Math.cos(angleCorrected*RAD)*12;\n      let liney = Math.sin(angleCorrected*RAD)*12;\n      c.lineTo( player.x + linex, height - player.y + liney );\n      c.stroke();\n    });\n    if ( cannonball ){\n      c.fillStyle = '#000';\n      c.beginPath();\n      c.arc( cannonball.x, height - cannonball.y, 3, 0, 2 * Math.PI );\n      c.fill();\n      let rx = Math.round(cannonball.x);\n      let ry = Math.round(cannonball.y);\n      let px = this.cachedCtx.getImageData(rx,height-ry,1,1).data;\n      if ( px[0] == 0 && px[1] == 255 && px[2] == 0 && px[3] == 255 ){\n        return true;\n      }\n      if ( cannonball.x < 0 || cannonball.x > width || cannonball.y < 0 ){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render(){\n    return (\n      <div className=\"Battlefield\">\n        <canvas id=\"stage\"/>\n      </div>\n    );\n  }\n}\n\nexport default Battlefield;\n","import React from 'react';\n\nclass ErrorBox extends React.Component {\n  render(){\n    return (\n      <div className=\"ErrorBox\">\n        {this.props.message}\n      </div> );\n  }\n}\n\nexport default ErrorBox;\n","/*\n\n  CannonFudderJS\n\n  (c) 2019 Sebastian Glaser\n  (c) 2019 DCI Digital Career Institute\n\n    Source-Code licensed under\n                   GNU GPL 3.0 (https://www.gnu.org/licenses/gpl-3.0.en.html)\n               and GNU FDL 1.0 (https://www.gnu.org/licenses/fdl-1.3.en.html)\n\n    Artwork licensed under\n                   CC-NC-SA 3.0 (https://creativecommons.org/licenses/by-nc-sa/3.0/)\n\n  ReactJS example to illustrate various aspects of using react in the wild.\n\n  This is based on the videogame classic 'Artillery Simulator' in which players get cannon towers,\n  randomly placed on a 2d terrain. The objective is to hit each other, going in turns,\n  until only one player is left.\n\n    https://en.wikipedia.org/wiki/Artillery_game\n\n  TEACHERS NOTE: this is intended as the full solution to the task.\n    - Usually you would remove a component or function and give students the task to fill in.\n    - For more advanced students the whole application can be re-created just using the assets,\n      with the complete application as a reference on how it should behave.\n\n  Unusual for code, but in the sense of open education\n    this project is released under GNU FDL,\n    and GNU GPLv3.\n\n*/\n\nimport './App.css';\nimport logo        from './logo.svg';\nimport React       from 'react';\n\n/*\n  As with any good react application we structure our code\n  into reusable components. Our entry point needs to import them.\n*/\n\nimport Controls    from './controls.js'    // the part responsible\nimport AddPlayer   from './addPlayer.js'\nimport Waiting     from './waitingList.js'\nimport Battlefield from './battlefield.js'\nimport ErrorBox    from './errorBox.js'\n\n/*\n  This function helps us get a random element from an Array.\n    NOTE: it is generally not recommended to extend the array prototype\n*/\n\nArray.prototype.random = function (){\n  return this[Math.floor(Math.random()*this.length)];\n}\n\n/*\n  Some elementary constants\n    relevant for the simulation of the projectile's flight\n    and working with angles\n*/\n\nconst GRAV = 9.81;          // approximation to the earth's gravity\nconst RAD  = Math.PI / 180; // radian conversion ratio (degrees to radians, 360 degrees = TAU = 2 * PI)\nMath.TAU = 2 * Math.PI;     // This fundamental constant is missing from javascript :D\n\nclass App extends React.Component {\n\n  state = {\n    player:          [],   // this array is where we keep all the player's states\n    currentPlayer:   null, // a reference to the player whose turn it currently is\n    controlsBlocked: true, // blocks player input if a projectile is flying or setting are opened\n    showSettings:    true  // wther or not the Settings should be shown\n  }\n\n  /*\n    This function creates a new player and inserts him into the list of players.\n    If there is no currentPlayer, this new player will be used as currentPlayer.\n  */\n\n  addPlayer = (name)=> {\n    // create a new anonymous object representing the player with some default values\n    let newPlayer = {\n      name:name,\n      health:100,\n      points:0,\n      angle:45,\n      power:100\n    };\n    // in addition\n    Object.assign(\n      newPlayer,\n      this.getStartingPosition()\n    );\n    // now push the newly created player to the end of the players array\n    this.state.player.push( newPlayer );\n    // using the boolean OR operator we check if a currentPlayer is already set\n    //   if not the new player will be set\n    //   this works because {this.state.currentPlayer} will evaluate to null\n    //   in wich case lazy evaluation will continue with the expression\n    //   and newPlayerwill be chosen.\n    this.state.currentPlayer = this.state.currentPlayer || newPlayer;\n    // because we mutated the state directly (mainly because of the array)\n    // we need to force an update in order for react to render anew.\n    this.forceUpdate()\n  }\n\n  /*\n    The following functions modify the player objects\n  */\n\n  turnLeft = ()=> {\n    if ( this.state.controlsBlocked ) return;\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.angle -= 5;\n    this.forceUpdate()\n  }\n\n  turnRight = ()=> {\n    if ( this.state.controlsBlocked ) return;\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.angle += 5;\n    this.forceUpdate()\n  }\n\n  lessPower = ()=> {\n    if ( this.state.controlsBlocked ) return;\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.power -= 5;\n    this.forceUpdate()\n  }\n\n  morePower = ()=> {\n    if ( this.state.controlsBlocked ) return;\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.power += 5;\n    this.forceUpdate()\n  }\n\n  /*\n    This is the simulation part.\n    Because one can't tell (actually on could)\n  */\n\n  fire = async ()=> {\n    if ( this.state.controlsBlocked ) return;\n    if ( ! this.state.currentPlayer ) return;\n    this.setState({controlsBlocked:true});\n    let time = 0;\n    let player = this.state.currentPlayer;\n    let angleCorrected = ( 360 + 360 - player.angle ) % 360;\n    let startX = player.x + Math.cos(angleCorrected*RAD)*6;\n    let startY = player.y - Math.sin(angleCorrected*RAD)*6;\n    let cannonball = {\n      x: startX,\n      y: startY\n    }\n    await new Promise( (resolve)=> {\n      let timer = setInterval( () => {\n        time += 0.033;\n        cannonball.x = startX + ( player.power * time * Math.cos( player.angle * RAD ));\n        cannonball.y = startY + ( player.power * time * Math.sin( player.angle * RAD )) - ( GRAV * Math.pow(time,2) / 2);\n        requestAnimationFrame(()=>{\n          if ( this.paintStage(cannonball) ){\n            this.state.player.forEach( (player) => {\n              let distanceX = Math.abs( player.x - cannonball.x );\n              let distanceY = Math.abs( player.y - cannonball.y );\n              let distance  = Math.sqrt( distanceX**2 + distanceY**2 );\n              if ( distance < 20 ){\n                player.health = Math.floor( player.health - ( 20 - distance ));\n              }\n            });\n            clearTimeout(timer);\n            resolve();\n          }\n        });\n      }, 16);\n    });\n    this.setState({controlsBlocked:false});\n    this.nextPlayer();\n  }\n\n  nextPlayer = () => {\n    let list = this.state.player;\n    let nextIdx = ( list.indexOf(this.state.currentPlayer) + 1 ) % list.length;\n    let player = list[nextIdx];\n    this.setState({currentPlayer:player});\n  }\n\n  flashError = async (msg) => {\n    this.setState({errorMessage:msg});\n    await new Promise( (resolve)=> { setTimeout(resolve,2000) });\n    this.setState({errorMessage:null});\n  }\n\n  startGame = () => {\n    this.setState({\n      showSettings:false,\n      controlsBlocked:false\n    });\n  }\n\n  componentDidUpdate = () => {\n    this.paintStage(false)\n  }\n\n  render(){\n    window.App = this;\n    let current = this.state.currentPlayer;\n    let others = this.state.player.filter( (player) => { return player !== current });\n    let playerNames = this.state.player.map( (player) => { return player.name } );\n    return (\n      <div className=\"App\">\n        <div className=\"Header\"></div>\n        { this.state.errorMessage ? <ErrorBox message={this.state.errorMessage} /> : null }\n        <Controls\n          player={current}\n          turnLeft={this.turnLeft}\n          turnRight={this.turnRight}\n          lessPower={this.lessPower}\n          morePower={this.morePower}\n          fire={this.fire}\n        />\n        <div className=\"WaitingPlayers\">\n          <Waiting list={others} />\n        </div>\n        { this.state.showSettings ?\n          <div className=\"Settings\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <AddPlayer addPlayer={this.addPlayer} list={playerNames} controller={this}/>\n            <button className=\"start center-relative-h\" onClick={this.startGame}>Start Game</button>\n          </div>\n        : null }\n        <Battlefield controller={this}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}